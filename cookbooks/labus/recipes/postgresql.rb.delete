#
# Copyright:: Copyright (c) 2012 Opscode, Inc.
# Copyright:: Copyright (c) 2014 GitLab.com
# Copyright:: Copyright (c) 2015 SKIF-Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This file is a modified version of postgresql.rb recipe file from omnibus-gitlab

###
# Create the database, migrate it, and create the users we need, and grant them
# privileges.
###
pg_helper = PgHelper.new(node)
pg_port = node['gitlab']['postgresql']['port']
pg_user = node['gitlab']['postgresql']['username']
bin_dir = "/opt/gitlab/embedded/bin"
redmine_database_name = node['labus']['labus-redmine']['db_database']
#indico_database_name = node['gitlab']['gitlab-ci']['db_database']

databases = []
if node['labus']['labus-redmine']['enable']
  databases << ['labus-redmine', redmine_database_name, node['labus']['postgresql']['sql_redmine_user']]
end

#if node['gitlab']['gitlab-ci']['enable']
#  databases << ['gitlab-ci', ci_database_name, node['gitlab']['postgresql']['sql_ci_user']]
#end

# here we change rails_app to labus_app because we have different apps in labus
# the problem of database initialization has to be solved
databases.each do |labus_app, db_name, sql_user|
  execute "create #{sql_user} database user" do
    command "#{bin_dir}/psql --port #{pg_port} -d template1 -c \"CREATE USER #{sql_user}\""
    user pg_user
    not_if { !pg_helper.is_running? || pg_helper.user_exists?(sql_user) }
  end

  execute "create #{db_name} database" do
    command "#{bin_dir}/createdb --port #{pg_port} -O #{sql_user} #{db_name}"
    user pg_user
    not_if { !pg_helper.is_running? || pg_helper.database_exists?(db_name) }
    retries 30
    notifies :run, "execute[initialize #{labus_app} database]", :immediately
  end
end
